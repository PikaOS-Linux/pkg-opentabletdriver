#! /bin/sh

# Automatically added by dh_installsystemduser/13.6ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -z "${DPKG_ROOT:-}" ] ; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper --user unmask 'opentabletdriver.service' >/dev/null || true

		# was-enabled defaults to true, so new installations run enable.
		if deb-systemd-helper --quiet --user was-enabled 'opentabletdriver.service' ; then
			# Enables the unit on first installation, creates new
			# symlinks on upgrades if the unit file has changed.
			deb-systemd-helper --user enable 'opentabletdriver.service' >/dev/null || true
		else
			# Update the statefile to add new symlinks (if any), which need to be
			# cleaned up on purge. Also remove old symlinks.
			deb-systemd-helper --user update-state 'opentabletdriver.service' >/dev/null || true
		fi
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemduser/13.6ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -z "${DPKG_ROOT:-}" ] ; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper --user unmask 'opentabletdriver.service' >/dev/null || true

		# was-enabled defaults to true, so new installations run enable.
		if deb-systemd-helper --quiet --user was-enabled 'opentabletdriver.service' ; then
			# Enables the unit on first installation, creates new
			# symlinks on upgrades if the unit file has changed.
			deb-systemd-helper --user enable 'opentabletdriver.service' >/dev/null || true
		else
			# Update the statefile to add new symlinks (if any), which need to be
			# cleaned up on purge. Also remove old symlinks.
			deb-systemd-helper --user update-state 'opentabletdriver.service' >/dev/null || true
		fi
	fi
fi
# End automatically added section

udevadm control --reload-rules
if lsmod | grep hid_uclogic > /dev/null ; then
     rmmod hid_uclogic || true
fi

if lsmod | grep wacom > /dev/null ; then
     rmmod wacom || true
fi
